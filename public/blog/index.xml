<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Daelon Morais</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on Daelon Morais</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 09 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Currently in class...</title>
      <link>/blog/currently-in-class/</link>
      <pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/currently-in-class/</guid>
      <description>Needleman-Wunsch Algorithm  used to score alignments In this example:  sequence 1 = “ACGCTTACCG” sequence 2 = “AGCCTACCCC”   Aligment Matrix By Python import numpy as np def match_fun(a,b): # Helper function to define match/mismatch scores if a==b: score= 1#match score else: score=-1 #mismatch score return score def needleman(seq1,seq2,gap_penalty=-1): # Needleman-Wunsch algorithm in a funct m=len(seq1) #length of horizontal sequence n=len(seq2) #length of vertical sequence score=np.empty(shape=[n+1,m+1]) #array to hold scores for j in range(0, m + 1): score[0][j] = gap_penalty * j for i in range(0, n + 1): score[i][0] = gap_penalty * i for i in range(1, n + 1): for j in range(1, m + 1): insert = score[i - 1][j] + gap_penalty delete = score[i][j - 1] + gap_penalty match = score[i - 1][j - 1] + match_fun(seq1[j-1], seq2[i-1]) score[i][j] = max(match, delete, insert) return score seq1=&amp;quot;CT&amp;quot; seq2=&amp;quot;CAT&amp;quot; needleman(seq1,seq2) ## array([[ 0.</description>
    </item>
    
  </channel>
</rss>